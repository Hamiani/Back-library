server.port=8080
server.servlet.context-path=/api

## DATA SOURCE PROPERTIES
#  database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/library
spring.datasource.username=postgres
spring.datasource.password=1996
spring.datasource.driver-class-name=org.postgresql.Driver
spring.main.allow-bean-definition-overriding=true
# connection for long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# jpa
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate /generate SQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## LOGGING PROPERTIES
#logging.level.org.springframework = debug
logging.file=c:/logs/Library-core.log
logging.level.root = INFO


## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=8MB
spring.servlet.multipart.max-request-size=10MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
storage.fileUploadDir=c:/uploads


##Cross Origin configuration
crossorigin.url=http://localhost:4800